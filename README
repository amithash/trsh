========================================================================================
                                    TRSH
	 		Copyright 2008 Amithash Prasad                                         
			       Version 2.2.170

	 trsh is free software: you can redistribute it and/or modify         
	 it under the terms of the GNU General Public License as published by   
	 the Free Software Foundation, either version 3 of the License, or      
	 (at your option) any later version.                                    
	                                                                        
	 This program is distributed in the hope that it will be useful,        
	 but WITHOUT ANY WARRANTY; without even the implied warranty of         
	 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          
	 GNU General Public License for more details.                           
	                                                                        
	 You should have received a copy of the GNU General Public License      
	 along with this program.  If not, see <http://www.gnu.org/licenses/>.  

========================================================================================

A safe rm.

MOTIVATION
--

I wrote this script when I accidentally deleted my homework. Enough Said...

SETUP
--
./configure.pl [OPTIONS]
make 
make install

Configure options:
USER=1 performs a user installation, USER=0 (default) Performs a system wide install

SHELL=/path/to/shell (default: $SHELL env variable)
You can provide an option about what shell you want to trsh to be used in.

IPATH="/path/to/trsh.pl" -- specify the path with the name of trsh.pl where you want
to install trsh.pl. default: /usr/bin/trsh.pl for USER=0 and $home/.trsh.pl for USER=1

RPATH="/path/to/*rc" -- specify the path to the *rc file. If not specified, the configure
script will look for a suitable rc file (based on the detected shell) in /etc for USER=0
or in $home for USER=1

MPATH="/path/to/man/files" -- specify the path to the commands man page (default - 
got from `manpath` and a preference is given to /usr/share/man/man1). This option 
is ignored for USER=1, as no man pages are installed for a user installation.

TPATH="RelPath/to/Trash" -- Specify the relative path from the home directory. 
Default: .Trash (Making the trash to be located in $HOME/.Trash). Necessary only
when you want Trash to be present elsewhere, or have a different name.

PPATH="/path/to/perl" -- specify the path to perl.
Default: got from the output of `which perl`
This is necessary when your distribution names perl as something else, or perl is 
not installed in a location present in $PATH.

Keep a lookout at the output of configure. It is right most of the time. But if you
feel it is not, try to configure it with your own options. I have tried it on fedora,
suse and ubuntu and you will not need any other options (USER is nice if you do not
have root access).

'make uninstall' To uninstall trsh from your system. 

'make clean' to clean your current directory of temporary files.

If you use an unsupported shell (like the z shell). You need to find out all the 
parameters for that shell like: How does aliases work?, where is the user rc file? 
where is the system wide rc file? etc and try your luck with the manual install 
described in the second point in the NOTES Section.


USAGE
--
rm [OPTIONS]... [FILES]...

FILES:
This is a list of files to recover or delete.

OPTIONS:

-u|--undo [FILES | REGEX]
If this option is provided without any other arguments, the latest deleted file will be restored.
If FILE/FILES are provided, the latest copy of these (If they exist in the trash) is recovered
If instead a regex is provided, then all files in the trash matching with the regex is recovered. 
(For regex usage, refer the subsection on regex below)

-f|--force
This option instructs trsh to permanently delete FILES and completely bypass the trash
If provided twice, (-ff) The force option is passed onto rm. This is not needed for 99%
of the use cases.

-i|--interactively
This option will instruct trsh to prompt the user before deleting each and every file.

-v|--verbose
This option will instruct trsh to talk about whatever it is doing.

-e|--empty
If this option is provided without any other arguments, Trash is emptied.
If FILE/FILES are provided, All copies of FILE is removed permanently from the trash
If instead a regex is provided, then all files in the trash matching with the regex is permanently removed.
(For regex usage, refer the subsection on regex below)

-r|--recursive
This option if provided will allow directories to be deleted.

-l|--list
This will display the contents of the trash.

-s|--size
This displays the size of the Trash directory. 
If provided with the -l option, The size of each trash entry will also be displayed.

-h|--human-readable
If provided with the -s option, the size will be printed in a human readable form.

--help
Displays this help and exits.

-x|--force-regex
This forces trsh to assume that the provided arguments are regex's. (Not needed most of the time, Read the REGEX Section)

rm FILES just moves FILES to the trash. By default, directories are not deleted.

REGEX
--

A regex is accepted for restoration and emptying the trash (refer -e and -u options above).
Currently only the * operator is accpeted. But as the shell tries to expand these, you will have
to escape the * by either putting the entire regex in quotes or escaping every instance of the *.
rm -u "some*"  # Correct
rm -r "some\*  # Correct
rm -u some*    # Wrong

The -x option is probably going to be the least used. Here is one of the scenarios where it might be useful:
touch test1 te\*t1
rm test1 te\*t1
rm -u "te\*t1"    # This will restore only te\*t1.
rm -ux "te\*t1"   # This will restore both test1 and te\*t1.
But rm -u "te*" will still restore both.


NOTES
--

1. If you really want to use the svn snapshot, then please stick to the revision 
   I have made avaliable for download! Revisions are dime a dozen, and they mean nothing!
   I run the tests only for the revision I want to upload to the downloads page.

2. MANUAL INSTALLATION: (These are steps which are followed by the configure and makefile scripts)
   i. Copy trsh.pl to anywhere you like, 
   ii. If you want a manual entry, copy trsh.1.gz to /usr/share/man/man1 (Optional)
   iii. Make changes in your bashrc file (Local or global)
   Local changes affect only the current user and global changes affect ALL 
   users.
      a. The local rc file is usually in the home folder and named .bashrc 
         (For bash and .cshrc for CSH and TCSH).
      b. The Global rc file is usually in the /etc folder named either as 
         bash.bashrc or bashrc for bash and csh.cshrc or cshrc for CSH or TCSH
	 Add the following lines for BASH:
         alias rm="/path/to/trsh.pl" 
         alias undo="/path/to/trsh.pl -u"

         Add the following lines for CSH/TCSH:
         alias rm "/path/to/trsh.pl" # CSH/TCSH
         alias undo "/path/to/trsh.pl -u" # CSH/TCSH

	 If your shell is not one of these, figure out from your shell's manual on how
	 to make aliases.

3. The installation will not allow you to use a Trash directory which is not 
   in the user home directory. This is due to:
   a. Privacy. It is easier to secure things in your home directory 
   b. Avoid complications with permissions in directories outside the user directory.
   If you really want trash to be in another directory, (Reasons might be a seperate scratch
   mount avaliable to users with a higher quota and no backups) After installation, do the following:
   
   /bin/rm -r /path/to/trash/dir 
   mkdir /path/to/new/trash
   ln -s /path/to/new/trash /path/to/trash/dir

   example:
   /bin/rm ~/.Trash
   mkdir -p /scratch/users/prasad/.Trash
   ln -s /scratch/users/prasad/.Trash ~/.Trash

4. The svn snapshot contains some extra scripts mostly to do with making my life easier in packaging and checkins. 
   (You will not need them unless you want to contrubute in the development, for which you will need to ask me first!)
   Along with those, there are some test scripts. these scripts are only present in the svn version (If you do an 
   svn checkout instead of downloading the tarballs). These test the functionality of trsh so that I do not package 
   a faulty trsh! test-trsh.bash tests trsh on bash and test-trsh.csh tests trsh on csh. And both are run before a
   package is created.


REPORTING BUGS
--

Report all bugs to:
http://code.google.com/p/trsh/issues

AUTHOR
--

Amithash Prasad {amithash@gmail.com}

