========================================================================================
                                    TRSH
	 		Copyright 2008 Amithash Prasad                                         

	 Seeker is free software: you can redistribute it and/or modify         
	 it under the terms of the GNU General Public License as published by   
	 the Free Software Foundation, either version 3 of the License, or      
	 (at your option) any later version.                                    
	                                                                        
	 This program is distributed in the hope that it will be useful,        
	 but WITHOUT ANY WARRANTY; without even the implied warranty of         
	 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the          
	 GNU General Public License for more details.                           
	                                                                        
	 You should have received a copy of the GNU General Public License      
	 along with this program.  If not, see <http://www.gnu.org/licenses/>.  

========================================================================================

A safe rm.

I wrote this script when I accidently deleted my homework.

SETUP
--
AUTOMATIC METHOD (Supported shells: bash and korn)
run setup.pl with an argument about your shell:
for BASH:
./setup.pl bash
As a plus for bash users (I am a bash user and hence the extra feature)
I have a series of tests which are executed automatically on setup.
If it says something failed, remove trsh completely (including alias in .bashrc)
And report it as a bug.

for C-Shell:
./setup.pl csh

This sets the following:
trash dir = HOME/.Trash
script copied to HOME/.trsh.pl

aliases set for:
rm = ~/.trsh.pl
undo = ~/.trsh.pl -u

If you do not like this, or your shell is not supported, 
try the manual method described below

MANUAL METHOD:

1. copy the trsh.pl to where ever you want,
I usually copy it to my home directory and rename it to .trsh.pl
so I do not see it!

edit your .Xrc file (for bash it is .bashrc, and the examples are for bash)
create an enviornment variable called TRASH_DIR pointing to what you want
to be used as a trash directory.

export TRASH_DIR='~/.Trash'

again, i choose the name of my trash dir to start with a "." therefore I 
do not generally see it on a ls.

then add an alias to stop using the rm command and using this instead.

alias rm='~/.trsh.pl'
alias undo='~/.trsh.pl -u'

TEST
--

First of all, before using trsh, due to the nature of its dependency,
Run tests test-trsh.sh and if any fail, raise a bug and NOT NOT USE further.

I understand that this is under the GNU license, and I am not responsible 
for your data loss, but still, does not mean that I cannot feel bad if
my program ate your system! 


USAGE
--

rm -r|-recover FILE
	this will move the deleted file named FILE from the trash to the current dir

rm -v|-view
	This will list the contents of the trash

rm -e|-empty
	This will empty the trash bin

rm -u|-undo
	This will restore the previously deleted file.

rm FILE
	This will delete the file

rm -f|-force FILE
	This will permanently delete the FILE

rm -s|-size 
	This will display the size of the trash folder.

rm -h|-help
	This will show the usage.

NOTES
--

This is not supposed to mimic the commands of rm, and here are the pecularities:
1. trsh does not complain that the file is a dir, and hense all files/dirs are equal for it
2. point 1 gets away with the -r option (which is different now)
3. NONE OF THE OPTIONS OF RM WORKS AS THEY ARE SUPPOSED TO IN TRSH

If multiple files of the same name are deleted, they are stored in the trash as if it were a stack.
Thus any recover will be like popping the files from the trash stack! 

KNOWN ISSUES
--
If a file has exactly 6 consicutive underscores, then bad things will happen! :-)
That is if a file is named: *______*, then bad things will happen. You are better 
off deleting this forcefully! 


